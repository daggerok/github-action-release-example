name: pre-release
on:
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to triggre manual jobs
        required: false
        default: ''
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
env:
  JAVA_VERSION: '17'
jobs:
  pre-release:
    #if: startsWith(github.event.inputs.trigger, 'm')
    #  || startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('**/*gradle*', '**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; ./gradlew --no-daemon --stop
      - run: cd $GITHUB_WORKSPACE ; ./gradlew --no-daemon --console=plain clean build
      - run: cd $GITHUB_WORKSPACE ; ./mvnw clean verify
      ## TODO: Publish docker images
      #- run: cd $GITHUB_WORKSPACE ; docker build --no-cache -t daggerok/file-items-service -f ./linux-services/file-items-service/Dockerfile .
      #- run: cd $GITHUB_WORKSPACE ; docker build --no-cache -t daggerok/file-server        -f ./linux-services/file-server/Dockerfile        .
      ## TODO: Publish github release with assets and update back github pages documentation to use jars from github release
      #- name: Deploy ðŸš€ GitHub Pages
      #  uses: JamesIves/github-pages-deploy-action@4.1.0
      #  with:
      #    branch: gh-pages # The branch the action should deploy to.
      #    folder: target/generated-docs # The folder the action should deploy.
      ## Create 'latest' pre-release
      - run: mkdir -p $GITHUB_WORKSPACE/dist
      - run: mv -f $GITHUB_WORKSPACE/build/libs/*.jar $GITHUB_WORKSPACE/dist/gradle-app.jar
      - run: mv -f $GITHUB_WORKSPACE/target/*.jar     $GITHUB_WORKSPACE/dist/maven-app.jar
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            dist/*.jar
